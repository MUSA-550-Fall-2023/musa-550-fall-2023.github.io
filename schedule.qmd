---
title: "Schedule"
sidebar: false
toc: false
page-layout: full
execute: 
  echo: false
---

::: {.callout-note} 
The schedule is tentative and could change in the future.
:::

```{python}
import yaml
import pandas as pd
from pyprojroot.here import here
from IPython.display import HTML

# Main directory
root_dir = here()

# Get the current lecture from project variables
variables = yaml.load((root_dir / "_variables.yml").open("r"), yaml.Loader)
current_lecture = variables["current_lecture"]
current_week = int(current_lecture[:-1])

def add_assignment_row(html, data, include_date=False):
  """Add a row for an assignment."""

  # Add row
  html.append("<tr>")

  # Col #1: Empty
  html.append("""<td class="col-week"></td>""")

  # Col #2: Date
  if not include_date:
    html.append("""<td class="col-lecture"></td>""")
  else:
    html.append(f"""
    <td class="col-lecture">
      <span class="content-class">{data["date_formatted"]}</span>
    </td>"""
  )

  # Col #3: Text description
  text = f"{data['description']} {data['task']}"
  if data['task'] == 'due':
    icon = '<i class="fa-solid fa-circle-exclamation fa-sm"></i>'
  else:
    icon = '<i class="fa-solid fa-star fa-sm"></i>'
  html.append(
      f"""
    <td class="col-lecture">
      <span class="assignment-icon-{data['task']}">{icon}</span>
      <span class="content-class content-assignment">{text}</span>
    </td>"""
  )


  # Col #4: Github repo link
  url = f"https://github.com/MUSA-550-Fall-2023/{data['slug']}"
  html.append(
    f"""
    <td class="col-repo">
      <a class="content-repo {disabled}" href="{url}">
        <i class="fa-brands fa-github fa-lg"></i>
      </a>
    </td>"""
  )


  # End
  html.append("</tr>")

  return html


def add_lecture_cells(html, data, lecture_number, assignments):
    """Add cells for date, static slides, interactive slides."""

    # Figure out if these cells disabled?
    week_number = int(lecture_number[:-1])
    disabled = ""
    if week_number > current_week:
        disabled = "disabled"
    elif (
        week_number == current_week
        and lecture_number.endswith("B")
        and current_lecture.endswith("A")
    ):
        disabled = "disabled"

    # Cell #1: empty
    html.append(
        f"""
      <td class="col-week">
      </td>"""
    )

    # Cell #2: Formatted date
    html.append(
        f"""
      <td class="col-lecture">
        <span class="content-class">{data["date_formatted"]}</span>
      </td>"""
    )

    # Cell #3: Lecture number
    html.append(
        f"""
      <td class="col-lecture">
        <span class="content-class">Lecture {lecture_number}</span>
      </td>"""
    )

    # Cell #4: Github repo link
    url = f"https://github.com/MUSA-550-Fall-2023/week-{week_number}"
    table.append(
      f"""
      <td class="col-repo">
        <a class="content-repo {disabled}" href="{url}">
          <i class="fa-brands fa-github fa-lg"></i>
        </a>
      </td>"""
    )


    # Cell #5: Static cells
    html.append(
        f"""
      <td class="col-slides-static">
        <a class="content-slides-static {disabled}" href="/content/week-{week}/lecture-{lecture_number}.html">
          <i class="fa-solid fa-book-open-reader fa-lg"></i>
        </a>
      </td>"""
    )

    # Cell #6: Interactive cells
    url = f"https://mybinder.org/v2/gh/MUSA-550-Fall-2023/week-{week}/HEAD?labpath=lecture-{lecture_number}.ipynb"
    html.append(
        f"""
      <td class="col-slides-binder">
        <a class="content-slides-binder {disabled}" href="{url}">
          <img src="/files/binder-favicon.webp"/>
        </a>
      </td>"""
    )
    html.append("</tr>")

    # Check for assignments and add row for each task
    hw = assignments.query(f"date_formatted == '{data['date_formatted']}'")
    if len(hw):
      for i, row in hw.iterrows():
        html = add_assignment_row(html, row, include_date=False)


    return html


# Load the schedule data
dates = pd.read_csv(root_dir / "data" / "schedule-dates.csv")
topics = pd.read_csv(root_dir / "data" / "schedule-topics.csv")
assignments = pd.read_csv(root_dir / "data" / "assignments.csv").assign(
        date=lambda df: pd.to_datetime(df.date),
        date_formatted=lambda df: df.date.dt.strftime("%A, %B %-d"),
    )

# Merge
data = (
    dates.merge(topics, on="week")
    .assign(
        date=lambda df: pd.to_datetime(df.date),
        date_formatted=lambda df: df.date.dt.strftime("%A, %B %-d"),
    )
    .sort_values("class_number", ascending=True)
)


# Set up headers
headers = ["", "", "", "Github Repo", "Static Slides", "Interactive Slides"]
table = [
    '<table class="table schedule-table table-borderless table-responsive">',
]
col_classes = [
    "col-week",
    "col-topic",
    "col-lecture",
    "col-slides-static",
    "col-slides-interactive",
]

# Add thead
table += ["<thead>", "<tr>"]
for i, col in enumerate(headers):
    table += [f'<th>{col}</th>']
table += ["</tr>", "</thead>"]

# Add tbody
table += ["<tbody>"]
for (week, topic), group in data.groupby(["week", "topic"], sort=False):

    # Is the week disabled?
    url = f"https://github.com/MUSA-550-Fall-2023/week-{week}"
    disabled = "disabled" if current_week < week else ""

    # Add week header row
    table.append('<tr class="week-header-row">')

    # Week number
    table.append(
        f"""
        <td class="col-week">
          <span class="content-week">Week {week}</span>
        </td>"""
    )

    # Topic
    table.append(
        f"""
        <td colspan="5" class="col-topic">
          <a class="content-topic {disabled}" href="/content/week-{week}">
            {topic}
          </a>
        </td>"""
    )
    table.append("</tr>")

    # Add the info for A lecture
    table.append('<tr>')
    table = add_lecture_cells(table, group.iloc[0], f"{week}A", assignments)

    # Do the "B" lecture too
    table.append('<tr class="lecture-row">')
    table = add_lecture_cells(table, group.iloc[1], f"{week}B", assignments)

# Add header row for final project
table.append("""
            <tr class="week-header-row">
              <td class="col-week" colspan="6">
                <span class="content-week">Finals period</span>
              </td>
            </tr>  
            """)


# Add row for final project task
table = add_assignment_row(table, 
                            assignments.query("slug == 'final-project'").squeeze(), 
                            include_date=True)

table += ["</tbody>", "</table>"]
table = "\n".join(table)

table
```

